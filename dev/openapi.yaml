openapi: 3.0.1
info:
  title: dev
  version: '1.0'
paths:
  /api/Customers:
    get:
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    post:
      tags:
        - Customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          text/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Customer'
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
            text/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /api/Customers/{customerId}:
    get:
      tags:
        - Customers
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Customer'
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
            text/json:
              schema:
                $ref: '#/components/schemas/Customer'
    put:
      tags:
        - Customers
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          text/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Customer'
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
            text/json:
              schema:
                $ref: '#/components/schemas/Customer'
    delete:
      tags:
        - Customers
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  /api/Orders:
    get:
      tags:
        - Orders
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      tags:
        - Orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          text/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Order'
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            text/json:
              schema:
                $ref: '#/components/schemas/Order'
  /api/Orders/{orderId}:
    get:
      tags:
        - Orders
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Order'
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            text/json:
              schema:
                $ref: '#/components/schemas/Order'
    put:
      tags:
        - Orders
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          text/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Order'
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            text/json:
              schema:
                $ref: '#/components/schemas/Order'
    delete:
      tags:
        - Orders
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  /api/Orders/status:
    put:
      tags:
        - Orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderStatusRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderStatusRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateOrderStatusRequest'
      responses:
        '200':
          description: OK
  /api/OrderStatuses:
    get:
      tags:
        - OrderStatuses
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderStatus'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderStatus'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderStatus'
    post:
      tags:
        - OrderStatuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderStatus'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderStatus'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrderStatus'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/OrderStatus'
  /api/OrderStatuses/{orderStatusId}:
    get:
      tags:
        - OrderStatuses
      parameters:
        - name: orderStatusId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrderStatus'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/OrderStatus'
    put:
      tags:
        - OrderStatuses
      parameters:
        - name: orderStatusId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderStatus'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderStatus'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrderStatus'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/OrderStatus'
    delete:
      tags:
        - OrderStatuses
      parameters:
        - name: orderStatusId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  /api/Products:
    get:
      tags:
        - Products
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      tags:
        - Products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          text/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Product'
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
            text/json:
              schema:
                $ref: '#/components/schemas/Product'
  /api/Products/{productId}:
    get:
      tags:
        - Products
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Product'
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
            text/json:
              schema:
                $ref: '#/components/schemas/Product'
    put:
      tags:
        - Products
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          text/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Product'
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
            text/json:
              schema:
                $ref: '#/components/schemas/Product'
    delete:
      tags:
        - Products
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
components:
  schemas:
    Customer:
      required:
        - address
        - name
        - phone
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          maxLength: 20
          minLength: 0
          type: string
        address:
          minLength: 1
          type: string
        email:
          type: string
          format: email
          nullable: true
        phone:
          minLength: 1
          pattern: ^\+?[1-9]\d{1,14}$
          type: string
      additionalProperties: false
    Order:
      required:
        - address
        - currentLocation
        - customerId
        - deliveryDate
        - orderDate
        - orderStatus
        - products
      type: object
      properties:
        orderId:
          type: integer
          format: int32
        customerId:
          type: integer
          format: int32
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        orderStatus:
          maxLength: 50
          minLength: 0
          type: string
        orderDate:
          type: string
          format: date-time
        deliveryDate:
          type: string
          format: date-time
        address:
          maxLength: 200
          minLength: 0
          type: string
        currentLocation:
          maxLength: 200
          minLength: 0
          type: string
      additionalProperties: false
    OrderStatus:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          maxLength: 50
          minLength: 0
          type: string
      additionalProperties: false
    Product:
      required:
        - name
        - price
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          maxLength: 100
          minLength: 0
          type: string
        description:
          maxLength: 500
          minLength: 0
          type: string
          nullable: true
        price:
          maximum: 2147483647
          minimum: 0
          type: integer
          format: int32
      additionalProperties: false
    UpdateOrderStatusRequest:
      type: object
      properties:
        orderId:
          type: integer
          format: int32
        orderStatus:
          type: string
          nullable: true
      additionalProperties: false
